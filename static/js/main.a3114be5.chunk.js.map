{"version":3,"sources":["ComponentA/controls/Button.js","ComponentA/controls/ActionButton.js","ComponentA/controls/Controls.js","ComponentA/controls/Input.js","ComponentA/controls/RadioGroup1.js","ComponentA/controls/Select.js","ComponentA/controls/DatePicker.js","ComponentA/useForm.js","services/employeeservice.js","ComponentA/EmployeeForm.js","ComponentA/Employee.js","ComponentA/Table/useTable.js","ComponentA/PopUp.js","ComponentA/Notification.js","ComponentA/ConfirmDialog.js","ComponentA/TableEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","root","margin","spacing","label","textTransform","useStyles","minWidth","secondary","backgroundColor","palette","light","color","main","primary","Controls","Input","props","name","value","error","onChange","other","TextField","variant","helperText","RadioGroup1","items","FormControl","FormLabel","row","map","item","FormControlLabel","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","formate","date","target","convertTodo","Button","classes","text","size","onClick","align","ActionButton","children","className","width","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","console","log","departments","x","department","dept","genderItems","initialFvalue","fname","email","city","mobile","gender","joindate","Date","isParmanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","e","resetForm","useForm","useEffect","onSubmit","preventDefault","Grid","container","xs","type","pageContent","padding","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleOnChangePage","event","newPage","handleOnChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","component","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","position","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","display","Typography","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogActions","justifyContent","titleIcon","curser","fontsize","ConfirmDialog","confirmDialog","setConfirmDialog","IconButton","disableRipple","NotListedLocation","varient","subTitle","DialogActions","onConfirm","searchInput","newButton","right","TableEmployees","employeeService","setRecords","setFilterFn","setRecordForEdit","onDelete","filter","Paper","Toolbar","InputProps","startAdornment","InputAdornment","Search","toLowerCase","includes","startIcon","TableBody","openInPopup","fontSize","employee","recordIndex","findIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3114be5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button as MuiButton, makeStyles} from '@material-ui/core'\r\n\r\nconst useStyle =makeStyles(theme =>({\r\n    \r\n    root:{\r\n        margin:theme.spacing(0.5)\r\n    },\r\n    label:{\r\n        textTransform:'none'\r\n    }\r\n\r\n}))\r\n\r\nexport default function Button(props){\r\n\r\n    const classes=useStyle();\r\n    const{text,size,color, variant,onClick, ...other}=props;\r\n    return(\r\n        <MuiButton align=\"left\"\r\n         variant={variant ||\"contained\"}\r\n         size={size||\"large\"}\r\n         color={color||\"primary\"}\r\n         onClick={onClick}\r\n         {...other}\r\n         classes={{root:classes.root,label:classes.label}}\r\n         >\r\n         {text}\r\n\r\n        </MuiButton>\r\n    )\r\n}","import { Button ,makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props){\r\n\r\n    const classes=useStyles();\r\n    const {color,children,onClick}=props;\r\n    return (\r\n        <Button\r\n         className={`${classes.root} ${classes[color]}`}\r\n         onClick={onClick}>\r\n         {children}\r\n          </Button>\r\n    )\r\n}","import Input from \"./Input\";\r\nimport RadioGroup1 from './RadioGroup1';\r\nimport Select from './Select';\r\nimport DatePicker from './DatePicker';\r\nimport Button from \"./Button\";\r\nimport ActionButton from \"./ActionButton\";\r\nconst Controls={\r\n Input,\r\n RadioGroup1,\r\n Select,\r\n DatePicker,\r\n Button,\r\n ActionButton\r\n}\r\nexport default Controls;","import React from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nexport default function Input(props){\r\n\r\n    const {name,label,value,error=null,onChange,...other}=props;\r\n    return(\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        label={label}  \r\n                        value={value}\r\n                        onChange={onChange}\r\n                        name={name}\r\n                        {...other}\r\n                        {...(error&&{error:true,helperText:error})}\r\n                       \r\n                    />\r\n    )\r\n}","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup1(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import React from 'react'\r\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\n\r\nexport default function Select(props) {\r\n\r\n    const { name, label, value,error=null, onChange, options } = props;\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    options.map(\r\n                        item=>(\r\n                            <MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>\r\n                        )\r\n                    )\r\n                }               \r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}","import React from 'react'\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\"\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nexport default function DatePicker(props){\r\n\r\n    const {name,label,value ,onChange}=props\r\n    const convertTodo =(name,value)=>({\r\n        target:{\r\n            name,value\r\n        }\r\n    })\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n            label={label}\r\n            formate=\"MMM/dd/yyyy\"\r\n            name={name}\r\n            value={value}\r\n            onChange={date=>onChange(convertTodo(name,date))}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport React, {useState } from 'react'\r\nexport function useForm(initialFvalue,validateOnChange=false, validate){\r\n\r\n    const [values, setValues] = useState(initialFvalue);\r\n    const [errors, setErrors] = useState({});\r\n    const handleInputChange =e =>{\r\n        const {name,value}=e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value \r\n        })\r\n        if(validateOnChange)\r\n        validate({[name]:value})\r\n    }\r\n    const resetForm =() =>{\r\n        setValues(initialFvalue);\r\n        setErrors({})\r\n    }\r\n    \r\n    return{\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    }\r\n}\r\nconst useStyles =makeStyles(theme =>({\r\n    root:{\r\n        '& .MuiFormControl-root':{\r\n            width:'80%',\r\n        margin:theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n export function Form(props){\r\n     const classes =useStyles();\r\n     const {children,...other}=props;\r\n     return(\r\n        <form className={classes.root} autoComplete=\"off\" {...other} >\r\n             {props.children}\r\n        </form>\r\n     )\r\n }                                                                                                                                                                              \r\n","const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex=employees.findIndex(x=>x.id==data.id);\r\n    employees[recordIndex]={...data}\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees=employees.filter(x=>x.id!=id);\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n        //return JSON.parse(localStorage.getItem(KEYS.employees));\r\n        let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n        //map departmentID to department title\r\n        console.log(employees);\r\n        let departments = getDepartmentCollection();\r\n \r\n        console.log(departments);\r\n        return employees.map(x => ({\r\n            ...x,\r\n            department: departments[x.dept-1].title\r\n        }))\r\n}","import { TextField, Grid, FormControl,Radio ,FormControlLabel,FormLabel,RadioGroup } from '@material-ui/core';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { useStyles } from '@material-ui/pickers/views/Calendar/SlideTransition';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Controls from '../ComponentA/controls/Controls';\r\n//import useForm from './useForm';\r\nimport {useForm,Form} from './useForm';\r\nimport * as employeeservices from '../services/employeeservice'\r\n\r\nconst genderItems =[\r\n    {id:'male',title:\"Male\"},\r\n    {id:'female',title:\"Female\"}\r\n]\r\n\r\nconst initialFvalue = {\r\n    id: 0,\r\n    fname: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    mobile: \"\",\r\n    dept: \"\",\r\n    gender: \"\",\r\n    joindate: new Date(),\r\n    isParmanent: false,\r\n}\r\n\r\n\r\nconst EmployeeForm = (props) => {\r\n\r\nconst {addOrEdit,recordForEdit}=props;\r\n\r\n    const validate=(fieldValues=values)=>{\r\n        let temp ={...errors}\r\n        if('fname' in fieldValues)\r\n            temp.fname = fieldValues.fname?\"\":\"this feild is required.\"\r\n        if('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"email not valid.\"\r\n        if('mobile' in fieldValues)\r\n            temp.mobile =fieldValues.mobile.length>9?\"\":\"Not valid.\"\r\n        if('dept' in fieldValues)\r\n            temp.dept = fieldValues.dept.length!=0?\"\":\"select one dept.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if(fieldValues==values)\r\n        return Object.values(temp).every(x=>x==\"\")\r\n    }\r\n    const classes = useStyles();\r\n    const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n    }=useForm(initialFvalue, true, validate);\r\n\r\n    const handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        if(validate()) {\r\n            addOrEdit(values,resetForm);\r\n        }\r\n    }\r\n    useEffect (()=>{\r\n        if(recordForEdit!=null)\r\n        setValues({\r\n            ...recordForEdit\r\n        })\r\n    },[recordForEdit])\r\n    return (\r\n       \r\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input name=\"fname\" label=\"name\"\r\n                    value={values.fname}\r\n                    onChange={handleInputChange}\r\n                    error={errors.fname}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        onChange={handleInputChange}\r\n                        value={values.email}\r\n                        name=\"email\"\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        onChange={handleInputChange}\r\n                        value={values.mobile}\r\n                        name=\"mobile\"\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        onChange={handleInputChange}\r\n                        value={values.city}\r\n                        name=\"city\"\r\n                        error={errors.city}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <Controls.RadioGroup1\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                    name=\"dept\"\r\n                    label=\"Department\"\r\n                    value={values.dept}\r\n                    onChange={handleInputChange}\r\n                    options={employeeservices.getDepartmentCollection()}\r\n                   error={errors.dept}\r\n                    />\r\n                    <Controls.DatePicker\r\n                    name=\"joindate\"\r\n                    label=\"Joining Date\"\r\n                    value={values.joindate}\r\n                    onChange={handleInputChange}\r\n                    />\r\n                    <div><Controls.Button\r\n                    type=\"submit\"\r\n                     text=\"Submit\" />\r\n                     <Controls.Button\r\n                     color=\"default\"\r\n                     text=\"Reset\" \r\n                     onClick={resetForm}\r\n                     />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            </Form>\r\n    )\r\n}\r\nexport default EmployeeForm;\r\n","import React from 'react';\r\nimport EmployeeForm from './EmployeeForm';\r\nimport {Paper} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles =makeStyles(theme =>({\r\n    pageContent:{\r\n        margin:theme.spacing(1),\r\n        padding:theme.spacing(1),\r\n    }\r\n\r\n\r\n}))\r\nconst Employee =() =>{\r\n\r\n    const classes=useStyles();\r\n        return(\r\n            <>\r\n            <Paper className={classes.pageContent}>\r\n            <EmployeeForm />\r\n            </Paper>\r\n            </>\r\n        )\r\n}\r\nexport default Employee;\r\n","import React,{useState} from 'react'\r\nimport {Table, TableHead, TableRow,TableCell, makeStyles, TablePagination, TableSortLabel} from '@material-ui/core';\r\n\r\n\r\nconst useStyle =makeStyles(theme =>({\r\n    table:{\r\n        marginTop:theme.spacing(3),\r\n        '& thead th':{\r\n            fontWeight:'600',\r\n            color:theme.palette.primary.main,\r\n            backgroundColor:theme.palette.primary.light,\r\n        },\r\n        '& tbody td':{\r\n            fontWeight:'300',\r\n        },\r\n        '& tbody tr:hover':{\r\n            backgroundColor:'#fffbf2',\r\n            cursor:'pointer',\r\n        },\r\n    },\r\n    \r\n\r\n}))\r\n\r\n\r\n\r\nexport default function useTable(records,headCells,filterFn) {\r\n const classes=useStyle();\r\n    \r\n const pages =[5,10,25]\r\n const [page,setPage] =useState(0);\r\n const [rowsPerPage,setRowsPerPage]=useState(pages[page]);\r\n const [order,setOrder] =useState();\r\n const [orderBy,setOrderBy] =useState();\r\n const TblContainer= props =>(\r\n    <Table className={classes.table}>\r\n        {props.children}\r\n    </Table>\r\n)\r\nconst TblHead =props =>{\r\n\r\n    const handleSortRequest =cellId=>{\r\n        const isAsc = orderBy === cellId && order ==\"asc\";\r\n        setOrder(isAsc?'desc':'asc')\r\n        setOrderBy(cellId)\r\n    }\r\n    return (<TableHead>\r\n        <TableRow>\r\n          {  headCells.map(headCell=>(\r\n            <TableCell key={headCell.id}\r\n            sortDirection={orderBy === headCell.id ? order : false}>\r\n            {headCell.disableSorting?headCell.label:\r\n            <TableSortLabel \r\n            active={orderBy===headCell.id}\r\n            direction={orderBy === headCell.id? order:'asc'}\r\n            onClick ={()=>{handleSortRequest(headCell.id)}}\r\n            > {headCell.label}</TableSortLabel>\r\n            }\r\n          </TableCell>))}\r\n        </TableRow>\r\n     </TableHead>)\r\n}\r\nconst handleOnChangePage =(event,newPage) =>{\r\n setPage(newPage);\r\n}\r\nconst handleOnChangeRowsPerPage =(e)=>{\r\n    setRowsPerPage(parseInt(e.target.value,10));\r\n    setPage(0);\r\n}\r\nconst TblPagination =() =>(<TablePagination\r\n    component=\"div\"\r\n    page={page}\r\n    rowsPerPageOptions={pages}\r\n    rowsPerPage={rowsPerPage}\r\n    count={records.length}\r\n    onChangePage={handleOnChangePage}\r\n    onChangeRowsPerPage={handleOnChangeRowsPerPage}\r\n\r\n/>)\r\nfunction stableSort(array,comparator){\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n}\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nconst recordsAfterPagingAndSorting =()=>{\r\n    return stableSort(filterFn.fn(records),getComparator(order,orderBy)).slice(page*rowsPerPage,(page+1)*rowsPerPage);\r\n}\r\n    return{\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport { makeStyles, Snackbar } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst useStyle =makeStyles(theme=>({\r\n    root:{\r\n        top:theme.spacing(9)\r\n    }\r\n}))\r\nexport default function Notification(props) {\r\n\r\n    const { notify, setNotify } = props;\r\n    const classes =useStyle();\r\n    const handleClose=(event,reason)=>{\r\n        if(reason ---'clickaway'){\r\n            return\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen:false\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Snackbar \r\n                className={classes.root}\r\n                open={notify.isOpen}\r\n                autoHideDuration={3000}\r\n                anchorOrigin={{vertical:'top', horizontal:'right'}}\r\n                onClose={handleClose}\r\n            > \r\n            <Alert \r\n            severity={notify.type}\r\n            onClose={handleClose}\r\n            >\r\n                    {notify.message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </div>\r\n    )\r\n}","import { Dialog, DialogActions, DialogContent, DialogTitle, IconButton, makeStyles, Typography } from '@material-ui/core'\r\nimport { NotListedLocation } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport Controls from \"./controls/Controls\";\r\nconst useStyles=makeStyles(theme=>({\r\n\r\n    dialog:{\r\n        padding:theme.spacing(2),\r\n        position:'absolute',\r\n        top:theme.spacing(5)\r\n    },\r\n    dialogTitle:{\r\n        textAlign:'center'\r\n    },\r\n    dialogContent:{\r\n        textAlign:'center'\r\n    },\r\n    dialogActions:{\r\n        justifyContent:'center'\r\n    },\r\n    titleIcon:{\r\n        backgroundColor:theme.palette.secondary.light,\r\n        color:theme.palette.secondary.main,\r\n        '&:hover':{\r\n            backgroundColor:theme.palette.secondary.light,\r\n            curser:'default'\r\n        },\r\n        '& .MuiSvgIcon-root':{\r\n            fontsize:'8rem',\r\n        }\r\n    }\r\n}))\r\nexport default function ConfirmDialog(props){\r\n\r\n    const {confirmDialog,setConfirmDialog}=props;\r\n    const classes =useStyles();\r\n    return(\r\n        <Dialog open={confirmDialog.isOpen} classes={{paper:classes.dialog}}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n            <IconButton disableRipple className={classes.titleIcon}>\r\n                <NotListedLocation/>\r\n            </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography varient=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography varient=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogActions}>\r\n               <Controls.Button\r\n               text=\"No\"\r\n               color=\"default\"\r\n                onClick={()=>setConfirmDialog({...confirmDialog,isOpen:false})}   \r\n               />\r\n                <Controls.Button\r\n               text=\"Yes\"\r\n               color=\"secondary\"\r\n                onClick={confirmDialog.onConfirm}   \r\n               />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../ComponentA/Table/useTable\";\r\nimport * as employeeService from \"../services/employeeservice\";\r\nimport Controls from \"./controls/Controls\";\r\nimport { EditOutlined, Search } from \"@material-ui/icons\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Popup from \"../ComponentA/PopUp\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\"\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Notification from '../ComponentA/Notification'\r\nimport ConfirmDialog from '../ComponentA/ConfirmDialog'\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'fname', label: 'Employee Name' },\r\n    { id: 'email', label: 'Email Address (Personal)' },\r\n    { id: 'mobile', label: 'Mobile Number' },\r\n    { id: 'dept', label: 'Department' },\r\n    {id:'actions' ,label:'Action' , disableSorting: true}\r\n]\r\n\r\nexport default function TableEmployees() {\r\n\r\n    const classes = useStyles();\r\n    const [records, setRecords] = useState(employeeService.getAllEmployees())\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [recordForEdit,setRecordForEdit]=useState(null);\r\n    const [notify,setNotify] =useState({isOpen:false,message:'',type:''})\r\n    const [confirmDialog,setConfirmDialog]=useState({isOpen:false,title:'',subTitle:''})\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fname.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if(employee.id==0)\r\n            employeeService.insertEmployee(employee);\r\n        else\r\n            employeeService.updateEmployee(employee);    \r\n        resetForm();\r\n        setRecordForEdit(null);\r\n        setOpenPopup(false);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen:true,\r\n            message:'Submitted Successfully',\r\n            type:'success'\r\n        })\r\n    }\r\n    const openInPopup =item =>{\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n    const onDelete =id =>{\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen:false\r\n        })\r\n        employeeService.deleteEmployee(id);\r\n        setRecords(employeeService.getAllEmployees())\r\n        setNotify({\r\n            isOpen:true,\r\n            message:'Submitted Successfully',\r\n            type:'error'\r\n        })\r\n   \r\n    }\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add Employee\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => {setOpenPopup(true); \r\n                         setRecordForEdit(null);}}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                            (<TableRow key={item.id}>\r\n                                <TableCell>{item.fname}</TableCell>\r\n                                <TableCell>{item.email}</TableCell>\r\n                                <TableCell>{item.mobile}</TableCell>\r\n                                <TableCell>{item.department}</TableCell>\r\n                                <TableCell>\r\n                                    <Controls.ActionButton color=\"primary\"\r\n                                        onClick={()=>{openInPopup(item)}}\r\n                                    >\r\n                                        <EditOutlinedIcon fontSize=\"small\">\r\n\r\n                                        </EditOutlinedIcon>\r\n                                    </Controls.ActionButton>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Controls.ActionButton \r\n                                    color=\"secondary\"\r\n                                    onClick={()=>{\r\n                                        setConfirmDialog({\r\n                                            isOpen:true,\r\n                                            title:'Are you sure',\r\n                                            subTitle:\"you cant undo\",\r\n                                            onConfirm:()=>{onDelete(item.id)}\r\n                                        })\r\n                                       \r\n                                        }}>\r\n                                        <CloseIcon fontSize=\"small\">\r\n                                        </CloseIcon>\r\n                                    </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n            <Popup\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n                title=\"Employee Form\"\r\n            >\r\n                <EmployeeForm \r\n                recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit}\r\n                />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}","\nimport './App.css';\nimport Employee from './ComponentA/Employee';\nimport TableEmployee from './ComponentA/TableEmployee'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TableEmployee />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n \n    <App />\n  ,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}